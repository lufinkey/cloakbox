#!/bin/bash

readonly EXITCODE_BAD_ARGS=28

base_dir=$(dirname "${BASH_SOURCE[0]}")
prog_name=cloakbox

function setup
{
	mkdir -p "openvpn"
	mkdir -p "shared/.$prog_name"
	mkdir -p "shared/downloads"

	vagrant plugin install vagrant-vbguest
	vagrant plugin install vagrant-sshfs

	touch "shared/.$prog_name/setup_done"
}

if [ "$1" == "setup" ]
then
	cd "$base_dir"
	setup
elif [ "$1" == "start" ]
then
	cd "$base_dir"
	if [ ! -f "shared/.$prog_name/setup_done" ]
	then
		setup
	fi
	vagrant up
elif [ "$1" == "stop" ]
then
	cd "$base_dir"
	vagrant halt
elif [ "$1" == "updatevpn" ]
then
	cd "$base_dir"
	if [ ! -f "shared/.$prog_name/setup_done" ]
	then
		setup
	fi
	# TODO mutex lock this command
	vagrant up
	mkdir -p "shared/.$prog_name/tmp"
	rm -rf "shared/.$prog_name/tmp/openvpn"
	cp -r "openvpn" "shared/.$prog_name/tmp/openvpn"
	cmds_to_run=$(cat <<EOF
sudo service openvpn stop
cd /etc/openvpn
files=(*)
for file in "$files"
do
	if [ "$file" != "update-resolv-conf" ]
	then
		sudo rm -rf "$file"
	fi
done
sudo cp -n -t /etc/openvpn/ /shared/.$prog_name/tmp/openvpn/*
rm -rf /shared/.$prog_name/tmp/openvpn
sudo service openvpn start
EOF
	)
	echo "setting up openvpn inside of cloakbox"
	vagrant ssh -c "$cmds_to_run"
	sleep 1
	# Restart VM after updating openvpn settings
	vagrant halt
	vagrant up
elif [ "$1" == "destroy" ]
then
	clean=false
	arg_counter=2
	while [ $arg_counter -lt $# ]
	do
		arg=${!arg_counter}
		if [ "$arg" == "-c" ] || [ "$arg" == "--clean" ]
		then
			clean=true
		else
			>&2 echo "unrecognized argument $arg"
			exit $EXITCODE_BAD_ARGS
		fi
		arg_counter=$(($arg_counter+1))
	done

	cd "$base_dir"
	vagrant destroy -f
	if $clean
	then
		rm -rf .vagrant
		rm -rf shared/*
		rm -rf *.log
	fi
fi

