#!/bin/bash

prog_name=cloakbox

readonly EXITCODE_UNKNOWN_ERROR=1
readonly EXITCODE_BAD_ARGS=28

readonly EXITCODE_FILE_NOT_FOUND=101
readonly EXITCODE_UNKNOWN_MIME_TYPE=102
readonly EXITCODE_UNSUPPORTED_MIME_TYPE=103

readonly DOWNLOADS_ROOT="/shared/downloads"
readonly RPC_URL="http://localhost:6800/jsonrpc"

function json-escape
{
	json_str="$1"
	echo "${json_str,'"','\"'}"
}

function rpc-post-data
{
	escaped_method=$(json-escape "$1")
	echo "{\"jsonrpc\":\"2.0\", \"id\":\"$prog_name\", \"method\":\"$escaped_method\", \"params\":[$2]}"
}

if [ "$1" == "add" ]
then
	# Read the arguments
	url="$2"
	if [ -z "$url" ]
	then
		>&2 echo "add requires a torrent path, URL, or magnet link to be given"
		# TODO show usage
		exit $EXITCODE_BAD_ARGS
	fi
	options="$3"
	if [ -z "$options" ]
	then
		options="{}"
	fi
	options_type=$(echo "$options" | jq -r "type")
	if [ "$options_type" != "object" ]
	then
		>&2 echo "options must be a json object type"
		#TODO show usage
		exit $EXITCODE_BAD_ARGS
	fi

	# Create a unique folder to store the download
	foldername=$(cat /dev/urandom | tr -cd 'a-f0-9' | head -c 32)
	while [ -d "$DOWNLOADS_ROOT/$foldername" ]
	do
		foldername=$(cat /dev/urandom | tr -cd 'a-f0-9' | head -c 32)
	done
	mkdir -p "$DOWNLOADS_ROOT/$foldername"

	# Make the request
	escaped_folderpath=$(json-escape "$DOWNLOADS_ROOT/$foldername")
	options=$(echo "$options" | jq ".dir = \"$escaped_folderpath\"")
	if [[ "$url" =~ ^[0-9a-zA-Z_\-]+:\/\/.* ]] || [[ "$url" =~ magnet:\?xt=.* ]]
	then
		# URL or magnet link
		escaped_url=$(json-escape "$url")
		post_params="[\"$escaped_url\"], $options"
		post_data=$(rpc-post-data "aria2.addUri" "$post_params")
	else
		# File
		if [ ! -f "$url" ]
		then
			>&2 echo "Could not open file \"$url\""
			exit $EXITCODE_FILE_NOT_FOUND
		fi
		mime_type=$(file -b --mime-type "$url")
		if [ "$mime_type" == "application/x-bittorrent" ]
		then
			# Torrent
			file_contents=$(cat "$url" | base64)
			file_contents=$(json-escape "$file_contents")
			post_params="\"$file_contents\", [], $options"
			post_data=$(rpc-post-data "aria2.addTorrent" "$post_params")
		elif [ "$mime_type" == "application/metalink4+xml" ]
		then
			# Metalink
			file_contents=$(cat "$url" | base64)
			file_contents=$(json-escape "$file_contents")
			post_params="\"$file_contents\", $options"
			post_data=$(rpc-post-data "aria2.addMetalink" "$post_params")
		elif [ -z "$mime_type" ]
		then
			>&2 echo "Unable to determine file mime-type"
			exit $EXITCODE_UNKNOWN_MIME_TYPE
		else
			>&2 echo "Unsupported file mime-type \"$mime_type\""
			exit $EXITCODE_UNSUPPORTED_MIME_TYPE
		fi
	fi
	resp=$(wget -q -O - "$RPC_URL" --post-data="$post_data")
	if [ -z "$resp" ]
	then
		rm -rf "$DOWNLOADS_ROOT/$foldername"
		>&2 echo "error: an unknown error occured"
		exit $EXITCODE_UNKNOWN_ERROR
	fi
	result_obj=$(echo "$resp" | jq ".result")
	if [ "$result_obj" == "null" ] || [ "$result_obj" == "undefined" ]
	then
		# TODO check for error code maybe? I don't remember if this response has an error code and I'm too lazy to check it right now
		rm -rf "$DOWNLOADS_ROOT/$foldername"
		>&2 echo "error: an unknown error occured"
		exit $EXITCODE_UNKNOWN_ERROR
	fi

	# Make another request to check the status of the download
	gid=$(echo "$resp" | jq -r ".result")
	escaped_gid=${gid//'"'/'\"'}
	post_data2=$(rpc-post-data "aria2.tellStatus" "\"$escaped_gid\"")
	resp2=$(wget -q -O - "$RPC_URL" --post-data="$post_data2")

	status=$(echo "$resp2" | jq -r ".result.status")
	if [ "$status" == "error" ]
	then
		# Remove the broken download and exit
		>&2 echo "unable to start download"
		error_code=$(echo "$resp2" | jq -r ".result.errorCode")
		post_data3=$(rpc-post-data "aria2.remove" "\"$escaped_gid\"")
		wget -q "$RPC_URL" --post-data="$post_data3"
		rm -rf "$DOWNLOADS_ROOT/$foldername"
		exit "$errorCode"
	fi

	echo "Download added successfully"
	echo "GID: $gid"
	echo "path: $DOWNLOADS_ROOT/$foldername"
	echo "status: $status"

fi

